@page "/contact"
@inject HttpClient Http
@using System.ComponentModel.DataAnnotations


<div class="d-flex mail-container justify-content-center" >
    <div class="mail-card mt-4">
        <h3 class="text-center mb-4" >Kontakt skjema</h3>
        <hr class="my-4" />
        <EditForm Model="@emailRequest" OnValidSubmit="@SendEmail">
            <DataAnnotationsValidator/>


            <div class="mb-3">
                <label for="name" class="form-label">Navn</label>
                <InputText id="name" class="form-control shadow-sm" @bind-Value="emailRequest.Name"/>
                <ValidationMessage For="@(() => emailRequest.Name)"/>
            </div>

            <div class="mb-3">
                <label for="email" class="form-label" >Din e-post</label>
                <InputText id="email" class="form-control shadow-sm" @bind-Value="emailRequest.FromEmail"/>
                <ValidationMessage For="@(() => emailRequest.FromEmail)"/>
            </div>

            <div class="mb-3">
                <label for="message" class="form-label" >Melding</label>
                <InputTextArea id="message" class="form-control shadow-sm" rows="6" @bind-Value="emailRequest.Message"/>
                <ValidationMessage For="@(() => emailRequest.Message)"/>
            </div>
            
            <div class="text-center py-4 ">
                <button type="submit" role="button" class="button-send">Send</button>
            </div>

            

            @if (!string.IsNullOrWhiteSpace(responseMessage))
            {
                <div class="alert alert-success mt-4">@responseMessage</div>
            }
        </EditForm>

    </div>
</div>

@code {
    private EmailRequest emailRequest = new();
    private string? responseMessage;

    private async Task SendEmail()
    {
        var response = await Http.PostAsJsonAsync("api/email/send", emailRequest);
        if (response.IsSuccessStatusCode)
        {
            responseMessage = "E-post sendt.";
            emailRequest = new();
        }
        else
        {
            responseMessage = "Noe gikk galt, vennligst prøv igjen senere.";
        }
    }

    public class EmailRequest
    {
        [Required(ErrorMessage = "Navn er påkrevd.")]
        public string Name { get; set; } = string.Empty;

        [Required(ErrorMessage = "E-post er påkrevd.")]
        [EmailAddress(ErrorMessage = "Ugyldig e-postadresse.")]
        public string FromEmail { get; set; } = string.Empty;

        [Required(ErrorMessage = "Melding er påkrevd.")]
        public string Message { get; set; } = string.Empty;
    }

}